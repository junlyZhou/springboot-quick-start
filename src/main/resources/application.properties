# example:通用配置
default.domain = www.fang.com
default.port = 8080
default.local = 127.0.0.1
#启动端口号
server.port=8081

#SpringBoot激活多环境配置
#从Maven Profile指定的环境中的配置文件获取配置
#evn.config = @environment@
#测试读取配置，配置名和实体集字段不对应的情况
evn.config = default 
#SpringBoot激活多环境配置
spring.profiles.active=prod


#SpringBoox2.x 整合Mybatis3.x
#mybatis.type-aliases-package=com.example.springboot.domain
#spring.datasource.driver-class-name =com.mysql.jdbc.Driver #可以自动识别
spring.datasource.url=jdbc:mysql://localhost:3306/_local_test?characterEncoding=UTF-8&serverTimezone=UTC&useSSL=false
spring.datasource.username =root
spring.datasource.password =root
#如果不使用默认的数据源 （com.zaxxer.hikari.HikariDataSource）
spring.datasource.type =com.alibaba.druid.pool.DruidDataSource


# SpringBoot2.x 整合thymeleaf
#开发时关闭缓存,不然没法看到实时页面
spring.thymeleaf.cache=false
spring.thymeleaf.mode=HTML5
#前缀
spring.thymeleaf.prefix=classpath:/templates/
#编码
spring.thymeleaf.encoding=UTF-8
#类型
#spring.thymeleaf.content-type=text/html
#名称的后缀
spring.thymeleaf.suffix=.html

# SpringBoot2.x 整合 Redis 4.x
#=========redis基础配置=========
# redis 一共有16个库，选择使用哪个库
spring.redis.database=12
spring.redis.host = *.*.*.*
spring.redis.port = 3511
spring.redis.password = ****
# 连接超时时间 单位 ms（毫秒）
spring.redis.timeout=3000

#=========redis线程池设置=========
# 连接池中的最大空闲连接，默认值也是8。
spring.redis.jedis.pool.max-idle=200

#连接池中的最小空闲连接，默认值也是0。
spring.redis.jedis.pool.min-idle=200

# 如果赋值为-1，则表示不限制；pool已经分配了maxActive个jedis实例，则此时pool的状态为exhausted(耗尽)。
spring.redis.jedis.pool.max-active=2000

# 等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时
spring.redis.jedis.pool.max-wait=1000

# 自定义内容，给redis 的key 增加分层的前缀
com.example.springboot.redis.pre-name = springboot.test

# Spring AOP 默认已开启

# SpringBoot2.x 整合邮件发送功能 start
##用户名
spring.mail.host=smtp.qq.com
spring.mail.username=1342889520@qq.com
spring.mail.password=* #此处请输入正确密码
spring.mail.default-encoding=UTF-8






# 添加Actuator监控（开启全部或部分）
# management.endpoints.web.exposure.include=*
# （打开指定）
#management.endpoints.web.exposure.include=metrics
#（关闭指定）
#management.endpoints.web.exposure.exclude=metrics

# 添加SpringBoot-Admin监控
## 服务端监控地址
spring.boot.admin.client.url=http://localhost:8090
## 本机IP,,已在dev,prod中处理,故屏蔽此处
#spring.boot.admin.client.instance.service-base-url=http://127.0.0.1:8080/
# 开放监控内容
management.endpoints.web.exposure.include=*
# health/detail
management.endpoint.health.show-details = always


